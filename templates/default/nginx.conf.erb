server_tokens off;

upstream django {
    # connect to this socket
    server unix:/var/run/geonode.sock;    # for a file socket
    }

<% if node['ssl'] %>
server {
        listen 80;
        return 301 https://$host$request_uri;
}
<% end %>

server {
        <% if node['ssl'] %>
	    listen 443 default_server;
	    ssl on;
        ssl_certificate <%= node['cert']['certificate'] %>;
        ssl_certificate_key <%= node['cert']['key'] %>;

	    ssl_session_cache shared:SSL:50m;
        ssl_session_timeout 5m;
        ssl_prefer_server_ciphers on;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:ECDHE-RSA-RC4-SHA:ECDHE-ECDSA-RC4-SHA:RC4-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK';

        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";

	    <% else %>
	    listen 80 default_server;
	    <% end %>
        client_max_body_size <%=node['nginx']['client_max_body_size']%>;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-XSS-Protection "1; mode=block";

	# the domain name it will serve for
    	server_name _;   # substitute your machine's IP address or FQDN
    	charset     utf-8;
	    underscores_in_headers on;

	   location /geoserver {
                proxy_pass      http://127.0.0.1:8080;
                include         <%= @proxy_conf %>;
        }

        location /crossdomain.xml {
                alias <%= File.join(node['rogue']['rogue_geonode']['location'],'rogue_geonode/static_root/crossdomain.xml') %>;
        }

        location /static {
                alias <%=node['rogue']['rogue_geonode']['settings']['STATIC_ROOT']%>;
        }

        <% if node['rogue']['install_docs'] %>
        location /docs {
                alias <%=File.join(node['rogue']['rogue_geonode']['location'], '/docs/build/html')%>;
        }

        location /help {
                alias <%=File.join(node['rogue']['rogue_geonode']['location'], '/docs/build/html')%>;
        }
        <% end %>

        location /uploaded {
                alias <%=node['rogue']['rogue_geonode']['settings']['MEDIA_ROOT']%>;
        }

        location ~ \.(asp|aspx|php|jsp|cgi|pl)$ {
                deny all;
        }

    <% node['rogue']['nginx']['locations'].each do |location| %>

      location <%= location['query'] %> {
        <% location['keys'].each do |key, value| %>
                 <%= key %> <%= value %>;
        <%end%>
      }

    <%end%>

	# Finally, send all non-media requests to the Django server.
    	location / {
        	uwsgi_pass  django;
        	include     <%=File.join(node['nginx']['dir'],'/uwsgi_params')%>; # or the uwsgi_params you installed manually
        }
    }
